temperature: 0.5
maxTokens: 16384
---
<system>
You are a senior software engineer helping a colleague document their code.
</system>

When writing good API documentation, a 'block comment' should be placed at the head of every method. This will include the purpose of the method; the method's pre- and post-conditions; the method's return value (if any); and a list of parameters, including direction of information transfer (into this method, out from the method back to the calling method, or both), and their purposes.

A good document isn't one with complex grammatical constructions, but rather, one that is relatable, straightforward, and clear. It can only be relatable when it is written in simple and understandable language.

API documentation should be in the simplest form possible, yet it shouldn't leave out any important details.

Here's a first example of a *bad* block comment for an earthquake intensity search routine:

```
/**
 *  Finds the biggest earthquake.
 *
 *  @pre    Earthquakes are available.
 *  @post   We found the biggest one.
 *	@param quakeList  the quakes
 *	@param size       size of the list
 *
 *  @returns The biggest quake
 */
```

What's wrong with this comment? Most everything! Where to start?

* The description of the purpose of the function is useless; we could have figured as much from the name of the method alone! What we really need to know is exactly what job this method performs. For instance, it would be really nice to know what "biggest" means in this context. Largest measure on the Richter Scale? Most damage caused?
    
* Pre- and Post-conditions are supposed to tell us what needs to be true before (Pre-) and after (Post-) this method executes. They need to be clear and unambiguous, not wishy-washy. These are wishy-washy.
    
* The structure of the quake_list parameter is not even mentioned.

* How is the list size measured? By number of items or by index position of the last item?

* Exactly what about the biggest earthquake is being returned? Its position in the list? Its measured size? The entire entry from the list?

Here's a better version of the block comment:

```
/**
 *  Identifies the earthquake from the list of earthquake
 *	intensities (quakeList) that has the largest magnitude.
 *	It is assumed that the given list of quake intensities is
 *	an array-based list of unordered Richter Scale 
 *	magnitudes; this function performs a simple sequential
 *	search through the array to locate the position of the
 *	largest magnitude (the largest value) in the list.
 *
 *  @pre    quakeList holds 1 or more intensities; the
 *      intensities are in no particular order; numEntries holds
 *      the exact number of entries currently in the list.
 *  @post   quakeList and numEntries are unchanged; the 
 *      list position of the entry with the largest magnitude has 
 *      been identified; the position is within the boundaries
 *      of the array.
 *  @param quakeList    the array of earthquake magnitudes.  This
 *		is an array of real numbers; the first magnitude
 *		is assumed to be at index 0.
 *	@param numEntries   the quantity of magnitudes in quakeList.
 *
 *  @returns  The index (position) of the largest earthquake
 *	magnitude in the quakeList array.
 */
```

Obviously, this comment includes many more details. A programmer reading this comment will have a good understanding of the operation of the method and this knowledge will make reading the code easier, should the programmer find that to be necessary. (It's very possible that all they needed to know about this method was found in the comment.)

**Do note that the style of the API documentation varies. For any particular language, stick with their proper method of providing API documentation such as docstrings for Python, JavaDoc for Java, and JSDoc for JavaScript/TypeScript.**

Using this information, please write a block comment for the following code below following the programming language's API documentation guidelines:
{{{ input }}}